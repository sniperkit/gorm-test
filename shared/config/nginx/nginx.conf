##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
#
# Refs
# - https://gist.github.com/xameeramir/a5cb675fb6a6a64098365e89a239541d
#
##

# Default server configuration
#

user nginx;
worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections 1024;
}

# env ENVIRONMENT_VARIABLE_NAME
# env ENVIRONMENT_VARIABLE_NAME
# env ENVIRONMENT_VARIABLE_NAME
# env ENVIRONMENT_VARIABLE_NAME
# env ENVIRONMENT_VARIABLE_NAME
# env ENVIRONMENT_VARIABLE_NAME

http {

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log main;

  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;

  upstream elk {
    server elstack:8089; # fail_timeout=2s;
  }

  upstream elstack {
    # server localhost:8089 fail_timeout=2s;
    server elstack:8089; # fail_timeout=2s;
  }

  upstream search_GET {
    server query:8080;
    # server query:8082; # fail_timeout=2s;
  }

  upstream front {
    server front:3000; # fail_timeout=2s;
  }

  upstream pusher {
    server pusher:8080; # fail_timeout=2s;
    # server pusher:8083 fail_timeout=2s;
  }

  upstream meows_POST {
    server meow:8080; # fail_timeout=2s;
    # server meow:8081 fail_timeout=2s;
  }

  upstream meows_GET {
    server query:8080; # fail_timeout=2s;
    # server query:8082 fail_timeout=2s;
  }

  server {
    listen 80;

    index index.html index.htm;

    server_name localhost;
    # server_name _;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    add_header Access-Control-Allow-Origin *;

    # location / {
    #  try_files $uri $uri/ @redir;
    # }

    # location  @redir {
    #   return 301 http://$host:8080/web$request_uri;
    # }

    location /ui {
      alias  /var/www/html/meow-vuejs-front;
      try_files $uri $uri/ /index.html;
      return 301 http://$host:8080/$request_uri;
    }

    location /meows {
      limit_except GET POST OPTIONS {
        deny all;
      }
      proxy_pass http://meows_$request_method;
    }

    location /search {
      limit_except GET OPTIONS {
        deny all;
      }
      proxy_pass http://search_GET;
    }

    location /pusher {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_pass http://pusher;
    }

    location /server-status {
        stub_status on;
    }

    location /elk {
      rewrite ^/elk(.*)$ $1 break;
      proxy_pass http://elk$1;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;

      if (!-f $request_filename) {
        proxy_pass http://elk$1;
        break;
      }

    }

    location /elstack {
      try_files $uri @elstack;
    }

    location @elstack {
      # rewrites out /stats in any request to the stats so it hits relative to /
      rewrite ^/elstack(.*)$ $1 break;
      # proxy_pass http://elstack$1;
    }

  }

}

